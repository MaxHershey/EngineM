var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Main = (function (_super) {
    __extends(Main, _super);
    function Main() {
        _super.call(this, 'screen');
        this.DEBUG_MODE = true;
        // kick it
        this.init();
    }
    Main.prototype.init = function () {
        this.entities = this.createInvaders().concat(new Player(this));
        this.loadSounds(['audio/pew.wav']).then(function () {
            // todo init in here
        });
        _super.prototype.init.call(this);
    };
    Main.prototype.update = function () {
        var _this = this;
        var entities = this.entities;
        var notCollidingWithAnything = function (b1) {
            return entities.filter(function (b2) {
                return _this.UTILITY.hasColided(b1, b2);
            }).length === 0;
        };
        this.entities = this.entities.filter(notCollidingWithAnything);
        _super.prototype.update.call(this);
    };
    Main.prototype.createInvaders = function () {
        var invaders = [];
        for (var i = 0; i < 24; i++) {
            var x = 30 + (i % 8) * 30; // 8 in a row
            var y = 30 + (i % 3) * 30; // 3 rows
            invaders.push(new Invader(this, { x: x, y: y }));
        }
        return invaders;
    };
    return Main;
})(EngineM.Game);
window.onload = function () {
    new Main();
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4udHMiXSwibmFtZXMiOlsiTWFpbiIsIk1haW4uY29uc3RydWN0b3IiLCJNYWluLmluaXQiLCJNYWluLnVwZGF0ZSIsIk1haW4uY3JlYXRlSW52YWRlcnMiXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7SUFBbUJBLHdCQUFZQTtJQUMzQkE7UUFDSUMsa0JBQU1BLFFBQVFBLENBQUNBLENBQUNBO1FBQ2hCQSxJQUFJQSxDQUFDQSxVQUFVQSxHQUFHQSxJQUFJQSxDQUFDQTtRQUV2QkEsVUFBVUE7UUFDVkEsSUFBSUEsQ0FBQ0EsSUFBSUEsRUFBRUEsQ0FBQ0E7SUFDaEJBLENBQUNBO0lBRU1ELG1CQUFJQSxHQUFYQTtRQUNJRSxJQUFJQSxDQUFDQSxRQUFRQSxHQUFHQSxJQUFJQSxDQUFDQSxjQUFjQSxFQUFFQSxDQUFDQSxNQUFNQSxDQUFDQSxJQUFJQSxNQUFNQSxDQUFDQSxJQUFJQSxDQUFDQSxDQUFDQSxDQUFDQTtRQUUvREEsSUFBSUEsQ0FBQ0EsVUFBVUEsQ0FBQ0EsQ0FBQ0EsZUFBZUEsQ0FBQ0EsQ0FBQ0EsQ0FBQ0EsSUFBSUEsQ0FBQ0E7WUFDcENBLG9CQUFvQkE7UUFDeEJBLENBQUNBLENBQUNBLENBQUNBO1FBRUhBLGdCQUFLQSxDQUFDQSxJQUFJQSxXQUFFQSxDQUFDQTtJQUNqQkEsQ0FBQ0E7SUFFTUYscUJBQU1BLEdBQWJBO1FBQUFHLGlCQVVDQTtRQVRHQSxJQUFJQSxRQUFRQSxHQUFHQSxJQUFJQSxDQUFDQSxRQUFRQSxDQUFDQTtRQUM3QkEsSUFBSUEsd0JBQXdCQSxHQUFHQSxVQUFDQSxFQUFtQkE7WUFDL0NBLE1BQU1BLENBQUNBLFFBQVFBLENBQUNBLE1BQU1BLENBQUNBLFVBQUNBLEVBQW1CQTtnQkFDdkNBLE1BQU1BLENBQUNBLEtBQUlBLENBQUNBLE9BQU9BLENBQUNBLFVBQVVBLENBQUNBLEVBQUVBLEVBQUVBLEVBQUVBLENBQUNBLENBQUNBO1lBQzNDQSxDQUFDQSxDQUFDQSxDQUFDQSxNQUFNQSxLQUFLQSxDQUFDQSxDQUFDQTtRQUNwQkEsQ0FBQ0EsQ0FBQ0E7UUFFRkEsSUFBSUEsQ0FBQ0EsUUFBUUEsR0FBR0EsSUFBSUEsQ0FBQ0EsUUFBUUEsQ0FBQ0EsTUFBTUEsQ0FBQ0Esd0JBQXdCQSxDQUFDQSxDQUFDQTtRQUMvREEsZ0JBQUtBLENBQUNBLE1BQU1BLFdBQUVBLENBQUNBO0lBQ25CQSxDQUFDQTtJQUVPSCw2QkFBY0EsR0FBdEJBO1FBQ0lJLElBQUlBLFFBQVFBLEdBQXNCQSxFQUFFQSxDQUFDQTtRQUVyQ0EsR0FBR0EsQ0FBQ0EsQ0FBQ0EsR0FBR0EsQ0FBQ0EsQ0FBQ0EsR0FBR0EsQ0FBQ0EsRUFBRUEsQ0FBQ0EsR0FBR0EsRUFBRUEsRUFBRUEsQ0FBQ0EsRUFBRUEsRUFBRUEsQ0FBQ0E7WUFDMUJBLElBQUlBLENBQUNBLEdBQUdBLEVBQUVBLEdBQUdBLENBQUNBLENBQUNBLEdBQUdBLENBQUNBLENBQUNBLEdBQUdBLEVBQUVBLENBQUNBLENBQUNBLGFBQWFBO1lBQ3hDQSxJQUFJQSxDQUFDQSxHQUFHQSxFQUFFQSxHQUFHQSxDQUFDQSxDQUFDQSxHQUFHQSxDQUFDQSxDQUFDQSxHQUFHQSxFQUFFQSxDQUFDQSxDQUFDQSxTQUFTQTtZQUVwQ0EsUUFBUUEsQ0FBQ0EsSUFBSUEsQ0FBQ0EsSUFBSUEsT0FBT0EsQ0FBQ0EsSUFBSUEsRUFBRUEsRUFBRUEsQ0FBQ0EsRUFBRUEsQ0FBQ0EsRUFBRUEsQ0FBQ0EsRUFBRUEsQ0FBQ0EsRUFBRUEsQ0FBQ0EsQ0FBQ0EsQ0FBQ0E7UUFDckRBLENBQUNBO1FBRURBLE1BQU1BLENBQUNBLFFBQVFBLENBQUNBO0lBQ3BCQSxDQUFDQTtJQUNMSixXQUFDQTtBQUFEQSxDQTNDQSxBQTJDQ0EsRUEzQ2tCLE9BQU8sQ0FBQyxJQUFJLEVBMkM5QjtBQUdELE1BQU0sQ0FBQyxNQUFNLEdBQUc7SUFDWixJQUFJLElBQUksRUFBRSxDQUFDO0FBQ2YsQ0FBQyxDQUFDIiwiZmlsZSI6Im1haW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyJjbGFzcyBNYWluIGV4dGVuZHMgRW5naW5lTS5HYW1lIHtcclxuICAgIGNvbnN0cnVjdG9yKCkge1xyXG4gICAgICAgIHN1cGVyKCdzY3JlZW4nKTtcclxuICAgICAgICB0aGlzLkRFQlVHX01PREUgPSB0cnVlO1xyXG4gICAgICAgIFxyXG4gICAgICAgIC8vIGtpY2sgaXRcclxuICAgICAgICB0aGlzLmluaXQoKTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgcHVibGljIGluaXQoKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5lbnRpdGllcyA9IHRoaXMuY3JlYXRlSW52YWRlcnMoKS5jb25jYXQobmV3IFBsYXllcih0aGlzKSk7XHJcbiAgICAgICAgXHJcbiAgICAgICAgdGhpcy5sb2FkU291bmRzKFsnYXVkaW8vcGV3LndhdiddKS50aGVuKCgpID0+IHtcclxuICAgICAgICAgICAgLy8gdG9kbyBpbml0IGluIGhlcmVcclxuICAgICAgICB9KTtcclxuICAgICAgICBcclxuICAgICAgICBzdXBlci5pbml0KCk7XHJcbiAgICB9XHJcbiAgICBcclxuICAgIHB1YmxpYyB1cGRhdGUoKTogdm9pZCB7XHJcbiAgICAgICAgdmFyIGVudGl0aWVzID0gdGhpcy5lbnRpdGllcztcclxuICAgICAgICB2YXIgbm90Q29sbGlkaW5nV2l0aEFueXRoaW5nID0gKGIxOiBFbmdpbmVNLklFbnRpdHkpID0+IHtcclxuICAgICAgICAgICAgcmV0dXJuIGVudGl0aWVzLmZpbHRlcigoYjI6IEVuZ2luZU0uSUVudGl0eSkgPT4ge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuVVRJTElUWS5oYXNDb2xpZGVkKGIxLCBiMik7XHJcbiAgICAgICAgICAgIH0pLmxlbmd0aCA9PT0gMDtcclxuICAgICAgICB9O1xyXG4gICAgICAgIFxyXG4gICAgICAgIHRoaXMuZW50aXRpZXMgPSB0aGlzLmVudGl0aWVzLmZpbHRlcihub3RDb2xsaWRpbmdXaXRoQW55dGhpbmcpO1xyXG4gICAgICAgIHN1cGVyLnVwZGF0ZSgpO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICBwcml2YXRlIGNyZWF0ZUludmFkZXJzKCk6IEVuZ2luZU0uSUVudGl0eVtdIHtcclxuICAgICAgICB2YXIgaW52YWRlcnM6IEVuZ2luZU0uSUVudGl0eVtdID0gW107XHJcbiAgICAgICAgXHJcbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCAyNDsgaSsrKSB7XHJcbiAgICAgICAgICAgIHZhciB4ID0gMzAgKyAoaSAlIDgpICogMzA7IC8vIDggaW4gYSByb3dcclxuICAgICAgICAgICAgdmFyIHkgPSAzMCArIChpICUgMykgKiAzMDsgLy8gMyByb3dzXHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICBpbnZhZGVycy5wdXNoKG5ldyBJbnZhZGVyKHRoaXMsIHsgeDogeCwgeTogeSB9KSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgICAgIHJldHVybiBpbnZhZGVycztcclxuICAgIH1cclxufVxyXG5cclxuXHJcbndpbmRvdy5vbmxvYWQgPSBmdW5jdGlvbigpIHtcclxuICAgIG5ldyBNYWluKCk7XHJcbn07XHJcbiJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==
